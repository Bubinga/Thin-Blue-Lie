@page "/Submit"
@inherits InformationBase
@attribute [Authorize]
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.DropDowns
@using ThinBlueLie.Helper
@using ThinBlueLie.Helper.Extensions
@using Syncfusion.Blazor.RichTextEditor
@using Syncfusion.Blazor.Buttons
@using static DataAccessLibrary.Enums.TimelineinfoEnums
@using Syncfusion.Blazor.Calendars


<Title>Create Event - Thin Blue Lie</Title>
<Meta Property="og:type" Content="website" />
<Meta Property="og:title" Content="Create a new Event" />
<Meta Name="description" Content="Create a new Event to be stored in our database and presented on our website" />
<style>
    body {
        overflow-x: hidden;
    }

    form {
        display: inherit;
    }   
</style>

<div class="offset-xl-2 d-lg-flex d-block container-fluid px-1 px-md-5 px-sm-3 pl-lg-2 mr-lg-0 pr-lg-0" style="margin-bottom:100px;">
    @if (SavingData)
    {
        <div style="z-index: 102; margin-bottom: 100px;">
            <SfSpinner Visible="SavingData" CssClass="e-spin-overlay" />
        </div>
    }
    <EditForm Model="model" OnValidSubmit="HandleValidSubmitAsync">
        <ObjectGraphDataAnnotationsValidator />
        <div class="col-xl-5 col-lg-6 col-12 border">
            <div class="d-block mb-0 pt-3 border-bottom mb-2">
                <h4 class="mb-0 d-flex justify-content-between">
                    Information Submission Form
                    <a href="/About/Submission-Guide" class="d-flex align-items-center">
                        <span style="font-size:smaller" class="pr-2">Guide</span>
                        <i data-feather="help-circle"></i>
                    </a>
                </h4>
            </div>
            <div id="basicInfo">
                <div class="form-group">
                    <div id="datepicker-control">
                        <SfDatePicker TValue="DateTime?" @bind-Value="@DateValue" Min="@MinDate" Max="@Today" Format="yyyy-MM-dd" Placeholder="Select a date" StrictMode="true">
                            <DatePickerEvents TValue="DateTime?" ValueChange="@FindEvents"></DatePickerEvents>
                        </SfDatePicker>
                        <ValidationMessage For="@(() => model.Timelineinfos.Date)"></ValidationMessage>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-5 dropdown" style="position:relative;">
                        <div class="align">
                            <div class="position-relative mb-md-0"> <br /> <label class="position-absolute" style="top:-6px; font-size:14px; line-height:24px;">State</label></div>
                            <SfDropDownList TItem="EnumExtensions.ListItem" TValue="TimelineinfoEnums.StateEnum?" PopupHeight="230px" Placeholder="State" @bind-Value="@model.Timelineinfos.State" DataSource="@States">
                                <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                            </SfDropDownList>
                            <ValidationMessage For="@(() => model.Timelineinfos.State)"></ValidationMessage>
                        </div>
                    </div>
                    <div class="col-7">
                        <SfTextBox CssClass="e-filled" Placeholder="City" FloatLabelType="@FloatLabelType.Always"
                                   HtmlAttributes="@StaticHelper.AutoCompleteOff"
                                   @bind-Value="model.Timelineinfos.City">
                        </SfTextBox>
                        <ValidationMessage For="@(() => model.Timelineinfos.City)"></ValidationMessage>
                    </div>
                </div>
                <div class="w-100 pt-3">
                    <SfTextBox CssClass="e-filled" Placeholder="Title" FloatLabelType="@FloatLabelType.Always" @bind-Value="model.Timelineinfos.Title"></SfTextBox>
                    <ValidationMessage For="@(() => model.Timelineinfos.Title)"></ValidationMessage>
                </div>
                <div class="mt-3">
                    <ul class="pl-0" style="list-style-type:none;">
                        @foreach (var datum in CheckableEnums)
                        {
                        <li> <SfCheckBox Label="@EnumExtensions.GetEnumDisplayName(datum.DataPoint)" @bind-Checked="datum.IsSelected"></SfCheckBox></li>
                        }
                        @{ model.Timelineinfos.SupData = (SupDataEnum)(CheckableEnums.Where(cb => cb.IsSelected).Select(val => (int)val.DataPoint)).Sum(); }
                    </ul>
                </div>
            </div>
            <hr />
            <div class="d-flex">
                <h6 class="d-inline">
                    Fill out the following information for the Subject
                </h6>
                <div class="d-inline ml-auto" @onclick="AddSubject" @onclick:stopPropagation="false" @onclick:preventDefault>
                    <SfButton IconCss="e-btn-sb-icons e-add-icon" CssClass="e-small e-flat float-right" IsPrimary="true" IconPosition=@IconPosition.Right>
                        Subject
                    </SfButton>
                </div>
            </div>
            <div id="SubjectList">
                @foreach ((var subject, Int32 i) in model.Subjects.Select((subject, i) => (subject, i)))
                {
                    <SubjectCard subject="subject" DeleteSubject="DeleteSubject" SuggestSubjects="SuggestSubjects" EventDate="model.Timelineinfos.Date"></SubjectCard>
                    if (SimilarSubjects[i] != null)
                    {
                        <SimilarPeople PersonRank="i" SetSameAs="SetSameAsSubject" People="SimilarSubjects[i]"></SimilarPeople>
                    }
                }
            </div>
            <hr />
            <div class="d-flex">
                <h6 class="d-inline">
                    Fill out the following information for the Officer
                </h6>
                <div class="d-inline ml-auto" @onclick="AddOfficer" @onclick:stopPropagation="false" @onclick:preventDefault>
                    <SfButton IconCss="e-btn-sb-icons e-add-icon" CssClass="e-small e-flat float-right" IsPrimary="true" IconPosition=@IconPosition.Right>
                        Officer
                    </SfButton>
                </div>
            </div>
            <div id="OfficerList">
                @foreach ((var officer, Int32 i) in model.Officers.Select((officer, i) => (officer, i)))
                {
                    <OfficerCard officer="officer" DeleteOfficer="DeleteOfficer" 
                                 SuggestOfficers="SuggestOfficers" EventDate="model.Timelineinfos.Date"></OfficerCard>
                    if (SimilarOfficers[i] != null)
                    {
                        <SimilarPeople PersonRank="i" SetSameAs="SetSameAsOfficer" People="SimilarOfficers[i]"></SimilarPeople>
                    }
                }
            </div>
            <div class="d-flex">
                <h6 class="d-inline">
                    Link Officers and Subjects with Misconducts
                </h6>
                <div class="d-inline ml-auto" @onclick="AddMisconduct" @onclick:stopPropagation="false" @onclick:preventDefault>
                    <SfButton IconCss="e-btn-sb-icons e-add-icon" CssClass="e-small e-flat float-right" IsPrimary="true" IconPosition=@IconPosition.Right>
                        Misconduct
                    </SfButton>
                </div>
            </div>
            <div id="MisconductList" class="misconduct-link">
                @foreach (var misconduct in model.Misconducts)
                {
                    <MisconductCard Misconduct="misconduct" Officers="model.Officers" 
                                    Subjects="model.Subjects" DeleteMisconduct="DeleteMisconduct" AllMisconducts="model.Misconducts">
                    </MisconductCard>
                }
            </div>
            <div class="form-group border-top mt-3 pt-2" id="context">
                <h6>
                    Context: Detailed information about the event.
                </h6>
                <SfRichTextEditor CssClass="w-100" @bind-Value="@model.Timelineinfos.Context" EnableResize="true" EnableHtmlSanitizer="true" ShowCharCount="true">
                    <RichTextEditorPasteCleanupSettings></RichTextEditorPasteCleanupSettings>
                    <RichTextEditorToolbarSettings Items="@Tools"></RichTextEditorToolbarSettings>
                </SfRichTextEditor>
                <ValidationMessage For="@(() => model.Timelineinfos.Context)"></ValidationMessage>
            </div>
            <div class="form-group">
                <ValidationSummary />
                <button id="submit" type="submit" class="btn btn-primary">Submit</button>
                <a href="/Index" style="float:right">Back to Home</a>
            </div>
        </div>
        <div class="col-xl-5 col-lg-6 d-none d-lg-block" id="otherColumn">
            <div class="row" id="similarEvents">
                <div class="container-fluid d-block">
                    <h4 class="pt-2">Similar Events</h4>
                    <p class="mb-0 border-bottom" style="font-size:1em">
                        Here are Events that share a date with your event, check to see if your event is a duplicate.
                    </p>
                    <div id="VideoList">
                        @if (SimilarEvents.Count == 0)
                        {
                            <div class="container mt-2" style="min-height:100px;">
                                <h5>There are no similar or duplicate Events!</h5>
                            </div>
                        }
                        else
                        {
                            foreach (var Event in SimilarEvents)
                            {
                                <SimilarEvents Event="Event"></SimilarEvents>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="row" id="addMedia">
                <div class="d-block border-top container-fluid border-bottom" @onclick:stopPropagation="false" @onclick:preventDefault>
                    <h4 class="pt-2">Add Media</h4>
                    <p class="mb-0" style="font-size:1em">
                        Add Media relevant to the event:
                    </p>
                </div>
                <div id="MediaList" class="container-fluid px-0">
                    <CascadingValue Name="IsEdit" Value="false">
                        <MediaAccordion Medias="model.Medias" AddMedia="AddMedia" DeleteMedia="DeleteMedia" MoveMediaDown="MoveMediaDown" MoveMediaTop="MoveMediaTop" MoveMediaUp="MoveMediaUp">
                        </MediaAccordion>
                    </CascadingValue>
                </div>
            </div>
        </div>
    </EditForm>
</div>